<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        IEzbhaV8AAAAAElFTkSuQmCC
</value>
  </data>
</root>